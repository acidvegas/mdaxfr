#!/bin/sh
# Mass DNS AXFR (POSIX version) - developed by acidvegas (https://git.acid.vegas/mdaxfr)

# Colors
BLUE="\033[1;34m"
CYAN="\033[1;36m"
GREEN="\033[1;32m"
GREY="\033[1;90m"
PINK="\033[1;95m"
PURPLE="\033[0;35m"
RED="\033[1;31m"
YELLOW="\033[1;33m"
RESET="\033[0m"

# Set output directory
output_dir="axfrout"
mkdir -p $output_dir


axfr() {
    domain=$1
    ns=$2
    ip=$3

    echo "                ${YELLOW}Attempting AXFR for ${CYAN}${domain}${YELLOW} from ${PURPLE}${ns} ${GREY}(${ip})${RESET}"

    axfr_output=$(dig +retry=3 +time=10 @$ip AXFR $domain)
    axfr_status=$?

    if [ $axfr_status -eq 0 ] && echo "$axfr_output" | grep -q "XFR size: "; then
        echo "$axfr_output" > "${output_dir}/axfr-${domain}_${ns}_${ip}.txt"
        size=$(echo "$axfr_output" | awk '/XFR size:/ {print $4}')
        echo "                ${GREEN}Successful AXFR for ${CYAN}${domain}${GREEN} from ${PURPLE}${ns} ${GREY}(${ip}) ${GREEN}found ${size} records${RESET}"
    else
        echo "                ${RED}    Failed AXFR for ${CYAN}${domain}${RED} from ${PURPLE}${ns} ${GREY}(${ip})${RESET}"
    fi
}


process_domain() {
    domain=$1

    domain=$(echo "$domain" | sed -e 's|^\(https\?://\)\?||' -e 's|^www\.||' -e 's|/.*||')

    echo "${PINK}Looking up nameservers for ${CYAN}${domain}${RESET}"

    nameservers=$(dig +short +retry=3 +time=10 $domain NS | sed 's/\.$//')

    [ -z "$nameservers" ] && echo "    ${GREY}No nameservers found for ${CYAN}${domain}${RESET}" && return

    total_nameservers=$(echo "$nameservers" | wc -l)
    echo "    ${BLUE}Found ${total_nameservers} nameservers for ${CYAN}${domain}${RESET}"

    for ns in $nameservers; do
        echo "        ${PINK}Looking up IP addresses for ${PURPLE}${ns}${RESET}"

        ns_ip=$(dig +short +retry=3 +time=10 $ns A && dig +short +retry=3 +time=10 $ns AAAA)

        [ -z "$ns_ip" ] && echo "            ${GREY}No IP addresses found on ${PURPLE}${ns}${GREY} for ${CYAN}${domain}${RESET}" && continue

        total_ip=$(echo "$ns_ip" | wc -l)
        echo "            ${BLUE}Found ${total_ip} IP addresses on ${PURPLE}${ns}${BLUE} for ${CYAN}${domain}${RESET}"

        for ip in $ns_ip; do
            axfr "$domain" "$ns" "$ip"
        done

        
    done
}


read_axfr_out() {
    axfr_output_file=$1

    root=$(grep -m1 '^; <<>> DiG' $axfr_output_file | awk '{print $NF}')
    domains=$(grep -aE "\s+IN\s+NS\s+" "$axfr_output_file" | grep -avE "^${root}\.\s+" | awk '{print $1}' | sort -u | sed 's/\.$//')

    [ -z "$domains" ] && echo "${GREY}No domains found for ${root}${RESET}" && return
 
    total_domains=$(echo "$domains" | wc -l)
    echo "${BLUE}Found ${total_domains} domains for ${CYAN}${root}${BLUE} zone"

    for domain in $domains; do
        process_domain $domain
    done
}


psl_crawl() {
    psl=$(curl -s https://publicsuffix.org/list/public_suffix_list.dat | grep -vE '^(//|.*[*!])' | grep '\.' | awk '{print $1}')

    [ -z "$psl" ] && echo "${RED}No PSL TLDs found${RESET}" && exit 1

    total_psl=$(echo "$psl" | wc -l)
    echo "${BLUE}Found ${total_psl} PSL TLDs${RESET}"

    # Process the PSL TLDs
    for tld in $psl; do
        process_domain $tld
    done
}


tld_crawl() {
    process_domain "."

    rndroot=$(find $output_dir/*.root-servers.net.txt -type f | shuf -n 1)

    if [ -z $rndroot ]; then
        echo "${GREY}No root nameserver found, using IANA TLD list${RESET}"
        tlds=$(curl -s 'https://data.iana.org/TLD/tlds-alpha-by-domain.txt' | tail -n +2 | tr '[:upper:]' '[:lower:]')
    else 
        tlds=$(cat $rndroot | grep -aE '\s+IN\s+NS\s+' | grep -avE "^\.\s+" | awk '{print $1}' | sed 's/\.$//' | sort -u)
    fi

    [ -z "$tlds" ] && echo "${RED}No TLDs found${RESET}" && exit 1

    total_tld=$(echo "$tlds" | wc -l)
    echo "${BLUE}Found ${total_tld} TLDs${RESET}"

    # Process the TLDs
    for tld in $tlds; do
        process_domain $tld
    done
}



if [ -t 0 ]; then
    if [ $# -ne 1 0 ]; then
        echo "Usage: $0 <option>"
        echo ""
        echo "Options:"
        echo "      -tld : Perform AXFR on all TLDs"
        echo "      -psl : Perform AXFR on all PSL TLDs"
        echo "    <file> : Process AXFR output file (must be an AXFR output file from dig)"
        echo "  <domain> : Perform AXFR on a single domain"
        echo ""
        echo "Standard Input:"
        echo "  cat domain_list.txt | $0"
        exit 1
    elif [ $1 = '-tld' ]; then
        tld_crawl
    elif [ $1 = '-psl' ]; then
        psl_crawl
    elif [ -f $1 ]; then
        read_axfr_out $1
    else
        process_domain $1
    fi
else
    while IFS= read -r line; do
        process_domain $line
    done
fi