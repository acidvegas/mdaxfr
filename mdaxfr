#!/bin/sh
# Mass DNS AXFR (POSIX version) - developed by acidvegas (https://git.acid.vegas/mdaxfr)

OUTPUT_DIR="axfrout"
mkdir -p "$OUTPUT_DIR"
mkdir -p "$OUTPUT_DIR/root"
mkdir -p "$OUTPUT_DIR/psl"

resolve_nameserver() {
	dig +short AAAA $1 +short -t A $1 2>/dev/null
}

attempt_axfr() {
	tld=$1
	nameserver=$2
	filename="$3"
	temp_file="${filename}.temp"

	nameserver_ips=$(resolve_nameserver "$nameserver")
	if [ -z "$nameserver_ips" ]; then
		echo "Failed to resolve nameserver $nameserver"
		return
	fi

	for nameserver_ip in $nameserver_ips; do
		dig AXFR "$tld" "@$nameserver_ip" > "$temp_file"
		if [ $? -eq 0 ]; then
			mv "$temp_file" "$filename"
			return 
		else
			echo "Failed to perform zone transfer from $nameserver for $tld"
			rm -f "$temp_file"
		fi
	done
}

# For root nameservers
for root in $(dig +short . NS); do
	attempt_axfr "." "$root" "$OUTPUT_DIR/root/$root.txt"
done

# Parse the tld list from a root nameserver
rndroot=$(find $OUTPUT/root/*.root-servers.net.txt -type f | shuf -n 1)
if [ -z $rndroot ]; then
	echo "Failed to AXFR a root nameserver (using IANA list instead)"
	tlds=$(curl -s 'https://data.iana.org/TLD/tlds-alpha-by-domain.txt' | tail -n +2 | tr '[:upper:]' '[:lower:]')
else 
	tlds=$(cat $rndroot | grep -E 'IN\s+NS' | awk '{print $1}' | sed 's/\.$//' | sort -u)
fi

# For TLD nameservers
for tld in $tlds; do
	for ns in $(dig +short "$tld" NS); do
		attempt_axfr "$tld" "$ns" "$OUTPUT_DIR/$tld.txt"
	done
done

# For Public Suffix List TLD nameservers
for tld in $(curl -s https://publicsuffix.org/list/public_suffix_list.dat | grep -vE '^(//|.*[*!])' | grep '\.' | awk '{print $1}'); do
	for ns in $(dig +short "$tld" NS); do
		attempt_axfr "$tld" "$ns" "$OUTPUT_DIR/psl/$tld.txt"
	done
done
